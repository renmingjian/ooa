package com.aai.selfie.processors

import android.content.Context
import android.graphics.Color
import android.graphics.Rect
import com.aai.core.utils.addTransParentForColor
import com.aai.core.utils.colorToInt
import com.aai.core.utils.convertRemToFloat
import com.aai.core.utils.getThemeAdvance
import com.aai.core.utils.getThemeBasic
import com.aai.core.utils.getThemeButton
import com.aai.core.utils.getThemeColor
import com.aai.core.utils.getThemeFont
import com.aai.core.utils.getTypeface
import com.aai.core.utils.toPx
import com.aai.selfie.R
import com.facetec.sdk.FaceTecCancelButtonCustomization
import com.facetec.sdk.FaceTecCustomization
import com.facetec.sdk.FaceTecSDK
import com.facetec.sdk.FaceTecSDK.InitializeCallback
import com.facetec.sdk.FaceTecSecurityWatermarkImage
import com.facetec.sdk.FaceTecVocalGuidanceCustomization

object Config {

    var DeviceKeyIdentifier = "d20cqfeepJhYkg3ahOuXUm0KaGQwT0QE"

    var ProductionKey = """
        appId      = com.aai.onestop
        expiryDate = 2024-02-10
        key        = 00304402206644482a9e36bacddcc657ae7858e7602a07ba902e9cca517e44f44ffd45adeb0220086544730080c22947782038d55a930538612b982768a862bfd0c11a7b722300
    """

    var PublicFaceScanEncryptionKey =
        "-----BEGIN PUBLIC KEY-----\n" +
                "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA02225BjDd09MABM124qg\n" +
                "HP7dQgbCjOQH8qYcK1mQ6c+y0S2IhHOol+XYiLWZv/ZCzhCei++WOQdqYItymBeN\n" +
                "w/E6PhTntCxm7VZ5oxYRn12i1OwyrQoyzHlawSwx+xXbh7Wkr9f0Mt9Os6auet1h\n" +
                "hbR6TOZgaWYUsR6ncCjcGCT4v75aGNcXusMJrtvWlTw8Zx2t6xBVPycy0UU2tOsY\n" +
                "Kziv4V5HMRLsGbS2dypQNkIzBDfcs8rTXEU+qLxy9UGHPAIXYuZPQxOsliuUqurz\n" +
                "8N8wz3sTqUIAv+UhxEw+/zZ3F4/7lNSGj9DkPwjKfBip284xWFcWQxFvgs74cmec\n" +
                "jQIDAQAB\n" +
                "-----END PUBLIC KEY-----"


    val defaultCustomization = FaceTecCustomization()
    fun initializeFaceTecSDKFromAutogeneratedConfig(
        context: Context?,
        callback: InitializeCallback?
    ) {
        FaceTecSDK.initializeInProductionMode(
            context!!,
            ProductionKey,
            DeviceKeyIdentifier,
            PublicFaceScanEncryptionKey,
            callback
        )
    }

    fun retrieveConfigurationWizardCustomization(): FaceTecCustomization {
        val themeColor = getThemeColor()
        val themeButton = getThemeButton()
        val themeAdvance = getThemeAdvance()
        val themeBasic = getThemeBasic()
        val backgroundColor = colorToInt(themeBasic.backgroundColor)

        defaultCustomization.guidanceCustomization.foregroundColor = Color.parseColor("#333333")

        // Set Frame Customization
        defaultCustomization.frameCustomization.borderWidth = 8.toPx()
        defaultCustomization.frameCustomization.backgroundColor =  Color.parseColor("#00FFFFFF")
        defaultCustomization.frameCustomization.borderColor = Color.parseColor("#00000000")

        defaultCustomization.guidanceCustomization.cameraPermissionsScreenImage =
            com.aai.core.R.drawable.enable_camera


        // Set Overlay Customization --- logo
        defaultCustomization.overlayCustomization.brandingImage = com.aai.core.R.drawable.empty_drawable
        defaultCustomization.overlayCustomization.backgroundColor = backgroundColor
        defaultCustomization.overlayCustomization.showBrandingImage =
            themeBasic.logoShow == "ALL_PAGES"

        // Set Guidance Customization
        defaultCustomization.guidanceCustomization.backgroundColors = backgroundColor
        defaultCustomization.guidanceCustomization.buttonFont =
            getTypeface(themeBasic.bodyFont)
        defaultCustomization.guidanceCustomization.buttonBorderColor =
            colorToInt(themeBasic.primaryButtonFillColor)
        defaultCustomization.guidanceCustomization.buttonCornerRadius =
            convertRemToFloat(themeBasic.buttonBorderRadius, 3F).toInt()
        defaultCustomization.guidanceCustomization.buttonBackgroundNormalColor =
            colorToInt(themeBasic.primaryButtonFillColor)
        defaultCustomization.guidanceCustomization.buttonBackgroundDisabledColor =
            colorToInt(addTransParentForColor(themeBasic.primaryButtonFillColor))
        defaultCustomization.guidanceCustomization.buttonBackgroundHighlightColor =
            colorToInt(themeBasic.primaryButtonFillColor)
        defaultCustomization.guidanceCustomization.buttonTextNormalColor =
            colorToInt(themeBasic.primaryButtonTextColor)
        defaultCustomization.guidanceCustomization.buttonTextDisabledColor =
            colorToInt(addTransParentForColor(themeBasic.primaryButtonTextColor))
        defaultCustomization.guidanceCustomization.buttonTextHighlightColor =
            colorToInt(themeBasic.primaryButtonTextColor)

        // header
        defaultCustomization.guidanceCustomization.readyScreenHeaderAttributedString = " "
        defaultCustomization.guidanceCustomization.readyScreenSubtextAttributedString = " "

        // retry
        defaultCustomization.guidanceCustomization.retryScreenHeaderFont =
            getTypeface(getThemeFont().headingFont)
        defaultCustomization.guidanceCustomization.retryScreenHeaderTextColor =
            colorToInt(themeColor.headingTextColor)
        defaultCustomization.guidanceCustomization.retryScreenSubtextFont =
            getTypeface(getThemeFont().subTitleFont)
        defaultCustomization.guidanceCustomization.retryScreenSubtextTextColor =
            colorToInt(themeColor.subtitleTextColor)
        defaultCustomization.guidanceCustomization.retryScreenImageBorderColor =
            colorToInt(themeColor.defaultImageFillColor)
        defaultCustomization.guidanceCustomization.retryScreenOvalStrokeColor =
            colorToInt(themeColor.defaultImageFillColor)
        // header 不能修改font-weight + font-size
        defaultCustomization.guidanceCustomization.headerFont =
            getTypeface(getThemeFont().headingFont)
        defaultCustomization.guidanceCustomization.readyScreenHeaderTextColor =
            colorToInt(themeColor.headingTextColor)
        // subtitle
        defaultCustomization.guidanceCustomization.subtextFont =
            getTypeface(themeBasic.bodyFont)
        defaultCustomization.guidanceCustomization.readyScreenSubtextTextColor =
            colorToInt(themeColor.bodyTextColor)

        // Set Oval Customization   --Ovalay
        defaultCustomization.ovalCustomization.strokeColor =
            colorToInt(themeColor.defaultImageFillColor)
        defaultCustomization.ovalCustomization.progressColor1 =
            colorToInt(themeColor.defaultImageFillColor)
        defaultCustomization.ovalCustomization.progressColor2 =
            colorToInt(themeColor.defaultImageFillColor)

        // Set Feedback Customization --反馈栏
        defaultCustomization.feedbackCustomization.backgroundColors =
            colorToInt(themeColor.defaultImageFillColor)
        defaultCustomization.feedbackCustomization.textColor = Color.parseColor("#FFFFFF")
        defaultCustomization.feedbackCustomization.cornerRadius =
            convertRemToFloat(themeAdvance.modalBorderRadius, 30F).toInt()
        defaultCustomization.feedbackCustomization.textFont =
            getTypeface(getThemeBasic().bodyFont)
        defaultCustomization.feedbackCustomization.elevation = 0

        // Set Cancel Customization
        defaultCustomization.cancelButtonCustomization.location =
            FaceTecCancelButtonCustomization.ButtonLocation.CUSTOM
        defaultCustomization.cancelButtonCustomization.customLocation =
            Rect(-300, 16, 19, 16)
        defaultCustomization.cancelButtonCustomization.customImage =
            com.aai.core.R.drawable.arrow_back


        // Set Security Watermark Customization
        defaultCustomization.securityWatermarkImage = FaceTecSecurityWatermarkImage.FACETEC_ZOOM

        // Set Result Screen Customization 等待结果页 logo + 文字 + 进度条 + 结果页面
        defaultCustomization.resultScreenCustomization.backgroundColors = backgroundColor
        defaultCustomization.resultScreenCustomization.foregroundColor =
            colorToInt(themeColor.bodyTextColor)
        defaultCustomization.resultScreenCustomization.activityIndicatorColor =
            colorToInt(themeBasic.primaryColor)

        //结果页面
        defaultCustomization.resultScreenCustomization.resultAnimationBackgroundColor =
            colorToInt(themeColor.defaultImageFillColor)
        defaultCustomization.resultScreenCustomization.resultAnimationForegroundColor =
            colorToInt("#FFFFFF")
        defaultCustomization.resultScreenCustomization.uploadProgressFillColor =
            colorToInt(themeColor.defaultImageFillColor)
        defaultCustomization.resultScreenCustomization.messageFont =
            getTypeface(themeBasic.bodyFont)

        // Set Initial Loading Customization
        defaultCustomization.initialLoadingAnimationCustomization.backgroundColors =
            colorToInt(themeBasic.backgroundColor)
        defaultCustomization.initialLoadingAnimationCustomization.foregroundColor =
            colorToInt(themeBasic.primaryColor)
        defaultCustomization.initialLoadingAnimationCustomization.messageFont =
            getTypeface(themeBasic.bodyFont)

        defaultCustomization.initialLoadingAnimationCustomization.customAnimation =
            com.aai.core.R.drawable.loading
        defaultCustomization.resultScreenCustomization.customActivityIndicatorAnimation =
            com.aai.core.R.drawable.loading_animtor
//        defaultCustomization.resultScreenCustomization.customResultAnimationSuccess =
//            com.aai.core.R.drawable.selfie_success_anim

        defaultCustomization.vocalGuidanceCustomization.mode =
            FaceTecVocalGuidanceCustomization.VocalGuidanceMode.NO_VOCAL_GUIDANCE
        return defaultCustomization
    }

}